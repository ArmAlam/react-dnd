{"ast":null,"code":"'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n  var str = '';\n  var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n  if (seconds === previousSeconds) {\n    counter++;\n  } else {\n    counter = 0;\n    previousSeconds = seconds;\n  }\n  str = str + generate(version);\n  str = str + generate(clusterWorkerId);\n  if (counter > 0) {\n    str = str + generate(counter);\n  }\n  str = str + generate(seconds);\n  return str;\n}\nmodule.exports = build;","map":{"version":3,"names":["generate","require","alphabet","REDUCE_TIME","version","counter","previousSeconds","build","clusterWorkerId","str","seconds","Math","floor","Date","now","module","exports"],"sources":["/home/arm/Desktop/exp/dnd-two/node_modules/shortid/lib/build.js"],"sourcesContent":["'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA;AACA;AACA,IAAIE,WAAW,GAAG,aAAa;;AAE/B;AACA;AACA,IAAIC,OAAO,GAAG,CAAC;;AAEf;AACA,IAAIC,OAAO;;AAEX;AACA,IAAIC,eAAe;;AAEnB;AACA;AACA;AACA;AACA,SAASC,KAAK,CAACC,eAAe,EAAE;EAC5B,IAAIC,GAAG,GAAG,EAAE;EAEZ,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACC,IAAI,CAACC,GAAG,EAAE,GAAGX,WAAW,IAAI,KAAK,CAAC;EAE5D,IAAIO,OAAO,KAAKJ,eAAe,EAAE;IAC7BD,OAAO,EAAE;EACb,CAAC,MAAM;IACHA,OAAO,GAAG,CAAC;IACXC,eAAe,GAAGI,OAAO;EAC7B;EAEAD,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACI,OAAO,CAAC;EAC7BK,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACQ,eAAe,CAAC;EACrC,IAAIH,OAAO,GAAG,CAAC,EAAE;IACbI,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACK,OAAO,CAAC;EACjC;EACAI,GAAG,GAAGA,GAAG,GAAGT,QAAQ,CAACU,OAAO,CAAC;EAC7B,OAAOD,GAAG;AACd;AAEAM,MAAM,CAACC,OAAO,GAAGT,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}