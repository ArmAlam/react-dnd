{"ast":null,"code":"var _jsxFileName = \"/home/arm/Desktop/exp/dnd-two/src/Row.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport Column from \"./Column\";\nimport { ROW } from \"./constants\";\nimport DropZone from \"./DropZone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {};\nconst Row = _ref => {\n  _s();\n  let {\n    data,\n    components,\n    handleDrop,\n    path\n  } = _ref;\n  const handler = useRef(null);\n  const columnWrapper = useRef(null);\n  const columnContainer = useRef(null);\n  const ref = useRef(null);\n  const [isResizable, setIsResizable] = useState(false);\n  const [isShowDropzone, setIsShowDropzone] = useState(true);\n  const [targetedColumn, setTargetedColumn] = useState(null);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    item: {\n      type: ROW,\n      id: data.id,\n      children: data.children,\n      path\n    },\n    canDrag: !isResizable,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }));\n  drag(ref);\n  const opacity = isDragging ? 0 : 1;\n  const renderColumn = (column, currentPath, ref) => {\n    return /*#__PURE__*/_jsxDEV(Column, {\n      innerRef: ref,\n      data: column,\n      components: components,\n      handleDrop: handleDrop,\n      path: currentPath\n    }, column.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    if (isResizable) {\n      document.addEventListener(\"mousemove\", seizer);\n      return () => document.removeEventListener(\"mousemove\", seizer);\n    }\n  }, [isResizable]);\n  const resizingStartHandler = index => {\n    setTargetedColumn(index - 1);\n    setIsResizable(true);\n  };\n  const seizer = e => {\n    console.log(\"moving\");\n    const targetedColumnEl = document.getElementById(`col-${path}-${targetedColumn}`);\n    // Get offset\n    let targetedColumnElOffsetLeft = targetedColumnEl.offsetLeft;\n\n    // Get x-coordinate of pointer relative to columnWrapper\n    let pointerRelativeXPos = e.clientX - targetedColumnElOffsetLeft - 30;\n    let boxAminWidth = 160;\n    console.log(columnContainer.current);\n    targetedColumnEl.style.width = Math.max(boxAminWidth, pointerRelativeXPos) + \"px\";\n    targetedColumnEl.style.flexGrow = 0;\n  };\n  const resizingEndHandler = index => {\n    console.log(\"stop\");\n    setIsResizable(false);\n  };\n  const resizeInterchangeHandler = () => {\n    setIsShowDropzone(true);\n    setIsResizable(false);\n  };\n  console.log(isResizable);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    style: {\n      ...style,\n      opacity\n    },\n    className: \"base draggable row\",\n    children: [data.id, data.children.length == 0 ? /*#__PURE__*/_jsxDEV(DropZone, {\n      data: {\n        path: `${path}-0`,\n        childrenCount: data.children.length\n      },\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: columnWrapper,\n      className: \"columns\",\n      children: [data.children.map((column, index) => {\n        const currentPath = `${path}-${index}`;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [isShowDropzone || index == 0 ? /*#__PURE__*/_jsxDEV(DropZone, {\n            data: {\n              path: currentPath,\n              childrenCount: data.children.length\n            },\n            onDrop: isResizable ? null : handleDrop,\n            className: \"horizontalDrag\",\n            onMouseOverHandler: () => {\n              if (index != 0) {\n                setIsShowDropzone(false);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            onMouseDown: () => resizingStartHandler(index),\n            onMouseUp: () => resizingEndHandler(index),\n            onMouseOut: resizeInterchangeHandler,\n            ref: handler,\n            id: `handle-${currentPath}`,\n            className: \"handler\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 19\n          }, this), renderColumn(column, currentPath, columnContainer)]\n        }, column.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(DropZone, {\n        data: {\n          path: `${path}-${data.children.length}`,\n          childrenCount: data.children.length\n        },\n        onDrop: handleDrop,\n        className: \"horizontalDrag\",\n        isLast: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Row, \"ur0Lf6cqfweOeeDHgm/nwbWJsRw=\", false, function () {\n  return [useDrag];\n});\n_c = Row;\nexport default Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDrag","Column","ROW","DropZone","style","Row","data","components","handleDrop","path","handler","columnWrapper","columnContainer","ref","isResizable","setIsResizable","isShowDropzone","setIsShowDropzone","targetedColumn","setTargetedColumn","isDragging","drag","item","type","id","children","canDrag","collect","monitor","opacity","renderColumn","column","currentPath","document","addEventListener","seizer","removeEventListener","resizingStartHandler","index","e","console","log","targetedColumnEl","getElementById","targetedColumnElOffsetLeft","offsetLeft","pointerRelativeXPos","clientX","boxAminWidth","current","width","Math","max","flexGrow","resizingEndHandler","resizeInterchangeHandler","length","childrenCount","map"],"sources":["/home/arm/Desktop/exp/dnd-two/src/Row.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport Column from \"./Column\";\nimport { ROW } from \"./constants\";\nimport DropZone from \"./DropZone\";\n\nconst style = {};\nconst Row = ({ data, components, handleDrop, path }) => {\n  const handler = useRef(null);\n  const columnWrapper = useRef(null);\n  const columnContainer = useRef(null);\n  const ref = useRef(null);\n  const [isResizable, setIsResizable] = useState(false);\n  const [isShowDropzone, setIsShowDropzone] = useState(true);\n  const [targetedColumn, setTargetedColumn] = useState(null);\n\n  const [{ isDragging }, drag] = useDrag(() => ({\n    item: {\n      type: ROW,\n      id: data.id,\n      children: data.children,\n      path,\n    },\n    canDrag: !isResizable,\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  }));\n  drag(ref);\n  const opacity = isDragging ? 0 : 1;\n\n  const renderColumn = (column, currentPath, ref) => {\n    return (\n      <Column\n        innerRef={ref}\n        key={column.id}\n        data={column}\n        components={components}\n        handleDrop={handleDrop}\n        path={currentPath}\n      />\n    );\n  };\n  useEffect(() => {\n    if (isResizable) {\n      document.addEventListener(\"mousemove\", seizer);\n      return () => document.removeEventListener(\"mousemove\", seizer);\n    }\n  }, [isResizable]);\n\n  const resizingStartHandler = (index) => {\n    setTargetedColumn(index - 1);\n    setIsResizable(true);\n  };\n\n  const seizer = (e) => {\n    console.log(\"moving\");\n    const targetedColumnEl = document.getElementById(\n      `col-${path}-${targetedColumn}`\n    );\n    // Get offset\n    let targetedColumnElOffsetLeft = targetedColumnEl.offsetLeft;\n\n    // Get x-coordinate of pointer relative to columnWrapper\n    let pointerRelativeXPos = e.clientX - targetedColumnElOffsetLeft - 30;\n    let boxAminWidth = 160;\n    console.log(columnContainer.current);\n    targetedColumnEl.style.width =\n      Math.max(boxAminWidth, pointerRelativeXPos) + \"px\";\n\n    targetedColumnEl.style.flexGrow = 0;\n  };\n\n  const resizingEndHandler = (index) => {\n    console.log(\"stop\");\n    setIsResizable(false);\n  };\n  const resizeInterchangeHandler = () => {\n    setIsShowDropzone(true);\n    setIsResizable(false);\n  };\n\n  console.log(isResizable);\n  return (\n    <div ref={ref} style={{ ...style, opacity }} className=\"base draggable row\">\n      {data.id}\n      {data.children.length == 0 ? (\n        <DropZone\n          data={{\n            path: `${path}-0`,\n            childrenCount: data.children.length,\n          }}\n          onDrop={handleDrop}\n        />\n      ) : (\n        <div ref={columnWrapper} className=\"columns\">\n          {data.children.map((column, index) => {\n            const currentPath = `${path}-${index}`;\n\n            return (\n              <React.Fragment key={column.id}>\n                {isShowDropzone || index == 0 ? (\n                  <DropZone\n                    data={{\n                      path: currentPath,\n                      childrenCount: data.children.length,\n                    }}\n                    onDrop={isResizable ? null : handleDrop}\n                    className=\"horizontalDrag\"\n                    onMouseOverHandler={() => {\n                      if (index != 0) {\n                        setIsShowDropzone(false);\n                      }\n                    }}\n                  />\n                ) : (\n                  <div\n                    onMouseDown={() => resizingStartHandler(index)}\n                    onMouseUp={() => resizingEndHandler(index)}\n                    onMouseOut={resizeInterchangeHandler}\n                    ref={handler}\n                    id={`handle-${currentPath}`}\n                    className=\"handler\"\n                  />\n                )}\n                {renderColumn(column, currentPath, columnContainer)}\n              </React.Fragment>\n            );\n          })}\n          <DropZone\n            data={{\n              path: `${path}-${data.children.length}`,\n              childrenCount: data.children.length,\n            }}\n            onDrop={handleDrop}\n            className=\"horizontalDrag\"\n            isLast\n          />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Row;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}