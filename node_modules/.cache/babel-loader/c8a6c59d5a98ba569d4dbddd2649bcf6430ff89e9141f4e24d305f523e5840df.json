{"ast":null,"code":"var _jsxFileName = \"/home/arm/Desktop/exp/dnd-two/src/DropZone.jsx\",\n  _s = $RefreshSig$();\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { COLUMN, COMPONENT, ROW, SIDEBAR_ITEM } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ACCEPTS = [SIDEBAR_ITEM, COMPONENT, ROW, COLUMN];\nconst DropZone = _ref => {\n  _s();\n  let {\n    data,\n    onDrop,\n    isLast,\n    className,\n    onMouseOverHandler,\n    id\n  } = _ref;\n  const [{\n    isOver,\n    canDrop\n  }, drop] = useDrop({\n    accept: ACCEPTS,\n    drop: (item, monitor) => {\n      onDrop(data, item);\n    },\n    canDrop: (item, monitor) => {\n      const dropZonePath = data.path;\n      const splitDropZonePath = dropZonePath.split(\"-\");\n      const itemPath = item.path;\n\n      // sidebar items can always be dropped anywhere\n      if (!itemPath) {\n        // if (data.childrenCount >= 3) {\n        //  return false;\n        // }\n        return true;\n      }\n      const splitItemPath = itemPath.split(\"-\");\n\n      // limit columns when dragging from one row to another row\n      const dropZonePathRowIndex = splitDropZonePath[0];\n      const itemPathRowIndex = splitItemPath[0];\n      const diffRow = dropZonePathRowIndex !== itemPathRowIndex;\n      if (diffRow && splitDropZonePath.length === 2 && data.childrenCount >= 3) {\n        return false;\n      }\n\n      // Invalid (Can't drop a parent element (row) into a child (column))\n      const parentDropInChild = splitItemPath.length < splitDropZonePath.length;\n      if (parentDropInChild) return false;\n\n      // Current item can't possible move to it's own location\n      if (itemPath === dropZonePath) return false;\n\n      // Current area\n      if (splitItemPath.length === splitDropZonePath.length) {\n        const pathToItem = splitItemPath.slice(0, -1).join(\"-\");\n        const currentItemIndex = Number(splitItemPath.slice(-1)[0]);\n        const pathToDropZone = splitDropZonePath.slice(0, -1).join(\"-\");\n        const currentDropZoneIndex = Number(splitDropZonePath.slice(-1)[0]);\n        if (pathToItem === pathToDropZone) {\n          const nextDropZoneIndex = currentItemIndex + 1;\n          if (nextDropZoneIndex === currentDropZoneIndex) return false;\n        }\n      }\n      return true;\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = isOver && canDrop;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(\"dropZone\", {\n      active: isActive,\n      isLast\n    }, className),\n    id: id,\n    onMouseOver: () => console.log('mouse overed vai'),\n    ref: drop\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(DropZone, \"oA/K18MYdxDGpyn78xv0qh28cRQ=\", false, function () {\n  return [useDrop];\n});\n_c = DropZone;\nexport default DropZone;\nvar _c;\n$RefreshReg$(_c, \"DropZone\");","map":{"version":3,"names":["classNames","React","useDrop","COLUMN","COMPONENT","ROW","SIDEBAR_ITEM","ACCEPTS","DropZone","data","onDrop","isLast","className","onMouseOverHandler","id","isOver","canDrop","drop","accept","item","monitor","dropZonePath","path","splitDropZonePath","split","itemPath","splitItemPath","dropZonePathRowIndex","itemPathRowIndex","diffRow","length","childrenCount","parentDropInChild","pathToItem","slice","join","currentItemIndex","Number","pathToDropZone","currentDropZoneIndex","nextDropZoneIndex","collect","isActive","active","console","log"],"sources":["/home/arm/Desktop/exp/dnd-two/src/DropZone.jsx"],"sourcesContent":["import classNames from \"classnames\";\nimport React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport { COLUMN, COMPONENT, ROW, SIDEBAR_ITEM } from \"./constants\";\n\nconst ACCEPTS = [SIDEBAR_ITEM, COMPONENT, ROW, COLUMN];\n\nconst DropZone = ({\n    data,\n    onDrop,\n    isLast,\n    className,\n    onMouseOverHandler,\n    id\n}) => {\n    const [{ isOver, canDrop }, drop] = useDrop({\n        accept: ACCEPTS,\n        drop: (item, monitor) => {\n            onDrop(data, item);\n        },\n        canDrop: (item, monitor) => {\n            const dropZonePath = data.path;\n            const splitDropZonePath = dropZonePath.split(\"-\");\n            const itemPath = item.path;\n\n            // sidebar items can always be dropped anywhere\n            if (!itemPath) {\n                // if (data.childrenCount >= 3) {\n                //  return false;\n                // }\n                return true;\n            }\n\n            const splitItemPath = itemPath.split(\"-\");\n\n            // limit columns when dragging from one row to another row\n            const dropZonePathRowIndex = splitDropZonePath[0];\n            const itemPathRowIndex = splitItemPath[0];\n            const diffRow = dropZonePathRowIndex !== itemPathRowIndex;\n            if (\n                diffRow &&\n                splitDropZonePath.length === 2 &&\n                data.childrenCount >= 3\n            ) {\n                return false;\n            }\n\n            // Invalid (Can't drop a parent element (row) into a child (column))\n            const parentDropInChild =\n                splitItemPath.length < splitDropZonePath.length;\n            if (parentDropInChild) return false;\n\n            // Current item can't possible move to it's own location\n            if (itemPath === dropZonePath) return false;\n\n            // Current area\n            if (splitItemPath.length === splitDropZonePath.length) {\n                const pathToItem = splitItemPath.slice(0, -1).join(\"-\");\n                const currentItemIndex = Number(splitItemPath.slice(-1)[0]);\n\n                const pathToDropZone = splitDropZonePath.slice(0, -1).join(\"-\");\n                const currentDropZoneIndex = Number(\n                    splitDropZonePath.slice(-1)[0]\n                );\n\n                if (pathToItem === pathToDropZone) {\n                    const nextDropZoneIndex = currentItemIndex + 1;\n                    if (nextDropZoneIndex === currentDropZoneIndex)\n                        return false;\n                }\n            }\n\n            return true;\n        },\n        collect: (monitor) => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n    const isActive = isOver && canDrop;\n    return (\n        <div\n            className={classNames(\n                \"dropZone\",\n                { active: isActive, isLast },\n                className\n            )}\n            id={id}\n            onMouseOver={() => console.log('mouse overed vai')}\n            ref={drop}\n        />\n    );\n};\nexport default DropZone;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}