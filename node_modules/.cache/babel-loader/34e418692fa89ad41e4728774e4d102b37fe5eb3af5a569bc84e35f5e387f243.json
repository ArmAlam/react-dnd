{"ast":null,"code":"'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\nvar shuffled;\nfunction reset() {\n  shuffled = false;\n}\nfunction setCharacters(_alphabet_) {\n  if (!_alphabet_) {\n    if (alphabet !== ORIGINAL) {\n      alphabet = ORIGINAL;\n      reset();\n    }\n    return;\n  }\n  if (_alphabet_ === alphabet) {\n    return;\n  }\n  if (_alphabet_.length !== ORIGINAL.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n  }\n  var unique = _alphabet_.split('').filter(function (item, ind, arr) {\n    return ind !== arr.lastIndexOf(item);\n  });\n  if (unique.length) {\n    throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n  }\n  alphabet = _alphabet_;\n  reset();\n}\nfunction characters(_alphabet_) {\n  setCharacters(_alphabet_);\n  return alphabet;\n}\nfunction setSeed(seed) {\n  randomFromSeed.seed(seed);\n  if (previousSeed !== seed) {\n    reset();\n    previousSeed = seed;\n  }\n}\nfunction shuffle() {\n  if (!alphabet) {\n    setCharacters(ORIGINAL);\n  }\n  var sourceArray = alphabet.split('');\n  var targetArray = [];\n  var r = randomFromSeed.nextValue();\n  var characterIndex;\n  while (sourceArray.length > 0) {\n    r = randomFromSeed.nextValue();\n    characterIndex = Math.floor(r * sourceArray.length);\n    targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n  }\n  return targetArray.join('');\n}\nfunction getShuffled() {\n  if (shuffled) {\n    return shuffled;\n  }\n  shuffled = shuffle();\n  return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n  var alphabetShuffled = getShuffled();\n  return alphabetShuffled[index];\n}\nfunction get() {\n  return alphabet || ORIGINAL;\n}\nmodule.exports = {\n  get: get,\n  characters: characters,\n  seed: setSeed,\n  lookup: lookup,\n  shuffled: getShuffled\n};","map":{"version":3,"names":["randomFromSeed","require","ORIGINAL","alphabet","previousSeed","shuffled","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","characters","setSeed","seed","shuffle","sourceArray","targetArray","r","nextValue","characterIndex","Math","floor","push","splice","getShuffled","lookup","index","alphabetShuffled","get","module","exports"],"sources":["/home/arm/Desktop/exp/dnd-two/node_modules/shortid/lib/alphabet.js"],"sourcesContent":["'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}