{"ast":null,"code":"var _jsxFileName = \"/home/arm/Desktop/exp/dnd-two/src/Column.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport Component from \"./Component\";\nimport { COLUMN } from \"./constants\";\nimport DropZone from \"./DropZone\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst style = {};\nconst Column = _ref => {\n  _s();\n  let {\n    data,\n    components,\n    handleDrop,\n    path,\n    innerRef\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    item: {\n      type: COLUMN,\n      id: data.id,\n      children: data.children,\n      path\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }), []);\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n  const renderComponent = (component, currentPath) => {\n    return /*#__PURE__*/_jsxDEV(Component, {\n      data: component,\n      components: components,\n      path: currentPath\n    }, component.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: `col-${path}`,\n    ref: innerRef,\n    className: \"columnContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      style: {\n        ...style,\n        opacity\n      },\n      className: \"base draggable column\",\n      children: [data.id, data.children.map((component, index) => {\n        const currentPath = `${path}-${index}`;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DropZone, {\n            data: {\n              path: currentPath,\n              childrenCount: data.children.length\n            },\n            onDrop: handleDrop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), renderComponent(component, currentPath)]\n        }, component.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(DropZone, {\n        data: {\n          path: `${path}-${data.children.length}`,\n          childrenCount: data.children.length\n        },\n        onDrop: handleDrop,\n        isLast: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Column, \"SAotHx5N7ORcDCKJxIYnUEpUB64=\", false, function () {\n  return [useDrag];\n});\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","useRef","useDrag","Component","COLUMN","DropZone","style","Column","data","components","handleDrop","path","innerRef","ref","isDragging","drag","item","type","id","children","collect","monitor","opacity","renderComponent","component","currentPath","map","index","childrenCount","length"],"sources":["/home/arm/Desktop/exp/dnd-two/src/Column.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport Component from \"./Component\";\nimport { COLUMN } from \"./constants\";\nimport DropZone from \"./DropZone\";\n\nconst style = {};\nconst Column = ({ data, components, handleDrop, path, innerRef }) => {\n    const ref = useRef(null);\n    const [{ isDragging }, drag] = useDrag(\n        () => ({\n            item: {\n                type: COLUMN,\n                id: data.id,\n                children: data.children,\n                path\n            },\n            collect: (monitor) => ({\n                isDragging: monitor.isDragging()\n            })\n        }), []\n    );\n\n    const opacity = isDragging ? 0 : 1;\n    drag(ref);\n\n    const renderComponent = (component, currentPath) => {\n        return (\n            <Component\n                key={component.id}\n                data={component}\n                components={components}\n                path={currentPath}\n            />\n        );\n    };\n\n    return (\n        <div id={`col-${path}`} ref={innerRef} className=\"columnContainer\">\n            <div\n                ref={ref}\n                style={{ ...style, opacity }}\n                className=\"base draggable column\"\n            >\n                {data.id}\n                {data.children.map((component, index) => {\n                    const currentPath = `${path}-${index}`;\n\n                    return (\n                        <React.Fragment key={component.id}>\n                            <DropZone\n                                data={{\n                                    path: currentPath,\n                                    childrenCount: data.children.length\n                                }}\n                                onDrop={handleDrop}\n                            />\n                            {renderComponent(component, currentPath)}\n                        </React.Fragment>\n                    );\n                })}\n                <DropZone\n                    data={{\n                        path: `${path}-${data.children.length}`,\n                        childrenCount: data.children.length\n                    }}\n                    onDrop={handleDrop}\n                    isLast\n                />\n            </div>\n        </div>\n    );\n};\nexport default Column;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,MAAM,QAAQ,aAAa;AACpC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAElC,MAAMC,KAAK,GAAG,CAAC,CAAC;AAChB,MAAMC,MAAM,GAAG,QAAsD;EAAA;EAAA,IAArD;IAAEC,IAAI;IAAEC,UAAU;IAAEC,UAAU;IAAEC,IAAI;IAAEC;EAAS,CAAC;EAC5D,MAAMC,GAAG,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAAC;IAAEa;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGb,OAAO,CAClC,OAAO;IACHc,IAAI,EAAE;MACFC,IAAI,EAAEb,MAAM;MACZc,EAAE,EAAEV,IAAI,CAACU,EAAE;MACXC,QAAQ,EAAEX,IAAI,CAACW,QAAQ;MACvBR;IACJ,CAAC;IACDS,OAAO,EAAGC,OAAO,KAAM;MACnBP,UAAU,EAAEO,OAAO,CAACP,UAAU;IAClC,CAAC;EACL,CAAC,CAAC,EAAE,EAAE,CACT;EAED,MAAMQ,OAAO,GAAGR,UAAU,GAAG,CAAC,GAAG,CAAC;EAClCC,IAAI,CAACF,GAAG,CAAC;EAET,MAAMU,eAAe,GAAG,CAACC,SAAS,EAAEC,WAAW,KAAK;IAChD,oBACI,QAAC,SAAS;MAEN,IAAI,EAAED,SAAU;MAChB,UAAU,EAAEf,UAAW;MACvB,IAAI,EAAEgB;IAAY,GAHbD,SAAS,CAACN,EAAE;MAAA;MAAA;MAAA;IAAA,QAInB;EAEV,CAAC;EAED,oBACI;IAAK,EAAE,EAAG,OAAMP,IAAK,EAAE;IAAC,GAAG,EAAEC,QAAS;IAAC,SAAS,EAAC,iBAAiB;IAAA,uBAC9D;MACI,GAAG,EAAEC,GAAI;MACT,KAAK,EAAE;QAAE,GAAGP,KAAK;QAAEgB;MAAQ,CAAE;MAC7B,SAAS,EAAC,uBAAuB;MAAA,WAEhCd,IAAI,CAACU,EAAE,EACPV,IAAI,CAACW,QAAQ,CAACO,GAAG,CAAC,CAACF,SAAS,EAAEG,KAAK,KAAK;QACrC,MAAMF,WAAW,GAAI,GAAEd,IAAK,IAAGgB,KAAM,EAAC;QAEtC,oBACI,QAAC,KAAK,CAAC,QAAQ;UAAA,wBACX,QAAC,QAAQ;YACL,IAAI,EAAE;cACFhB,IAAI,EAAEc,WAAW;cACjBG,aAAa,EAAEpB,IAAI,CAACW,QAAQ,CAACU;YACjC,CAAE;YACF,MAAM,EAAEnB;UAAW;YAAA;YAAA;YAAA;UAAA,QACrB,EACDa,eAAe,CAACC,SAAS,EAAEC,WAAW,CAAC;QAAA,GARvBD,SAAS,CAACN,EAAE;UAAA;UAAA;UAAA;QAAA,QAShB;MAEzB,CAAC,CAAC,eACF,QAAC,QAAQ;QACL,IAAI,EAAE;UACFP,IAAI,EAAG,GAAEA,IAAK,IAAGH,IAAI,CAACW,QAAQ,CAACU,MAAO,EAAC;UACvCD,aAAa,EAAEpB,IAAI,CAACW,QAAQ,CAACU;QACjC,CAAE;QACF,MAAM,EAAEnB,UAAW;QACnB,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QACR;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GAjEIH,MAAM;EAAA,QAEuBL,OAAO;AAAA;AAAA,KAFpCK,MAAM;AAkEZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}