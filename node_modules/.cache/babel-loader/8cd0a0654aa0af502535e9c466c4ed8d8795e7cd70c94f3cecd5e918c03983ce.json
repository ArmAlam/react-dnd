{"ast":null,"code":"var _jsxFileName = \"/home/arm/Desktop/exp/dnd-two/src/Component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { COMPONENT } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  border: \"1px dashed black\",\n  padding: \"0.5rem 1rem\",\n  backgroundColor: \"white\",\n  cursor: \"move\"\n};\nconst Component = _ref => {\n  _s();\n  let {\n    data,\n    components,\n    path,\n    isResizable\n  } = _ref;\n  const ref = useRef(null);\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    item: {\n      id: data.id,\n      path,\n      type: COMPONENT\n    },\n    canDrag: !isResizable,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }), []);\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n  const component = components[data.id];\n  const toggleModal = function () {\n    const modal = document.querySelector(\"#modal\");\n    modal.classList.toggle(\"active\");\n    modal.innerText = component.content;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref,\n      style: {\n        ...style,\n        opacity\n      },\n      className: \"component draggable\",\n      onClick: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: data.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: component.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Component, \"SAotHx5N7ORcDCKJxIYnUEpUB64=\", false, function () {\n  return [useDrag];\n});\n_c = Component;\nexport default Component;\nvar _c;\n$RefreshReg$(_c, \"Component\");","map":{"version":3,"names":["React","useRef","useDrag","COMPONENT","style","border","padding","backgroundColor","cursor","Component","data","components","path","isResizable","ref","isDragging","drag","item","id","type","canDrag","collect","monitor","opacity","component","toggleModal","modal","document","querySelector","classList","toggle","innerText","content"],"sources":["/home/arm/Desktop/exp/dnd-two/src/Component.jsx"],"sourcesContent":["import React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\n\nimport { COMPONENT } from \"./constants\";\n\nconst style = {\n    border: \"1px dashed black\",\n    padding: \"0.5rem 1rem\",\n    backgroundColor: \"white\",\n    cursor: \"move\"\n};\nconst Component = ({ data, components, path, isResizable }) => {\n    \n    const ref = useRef(null);\n    const [{ isDragging }, drag] = useDrag(\n        () => ({\n            item: {  id: data.id, path, type: COMPONENT, },\n            canDrag: !isResizable,\n            collect: (monitor) => ({\n                isDragging: monitor.isDragging()\n            })\n        }), []\n    );\n\n    const opacity = isDragging ? 0 : 1;\n    drag(ref);\n\n    const component = components[data.id];\n\n    const toggleModal = function () {\n        const modal = document.querySelector(\"#modal\");\n        modal.classList.toggle(\"active\");\n        modal.innerText = component.content;\n    };\n\n    return (\n        <>\n            <div\n                ref={ref}\n                style={{ ...style, opacity }}\n                className=\"component draggable\"\n                onClick={toggleModal}\n            >\n                <div>{data.id}</div>\n                <div>{component.content}</div>\n            </div>\n        </>\n    );\n};\nexport default Component;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,OAAO,QAAQ,WAAW;AAEnC,SAASC,SAAS,QAAQ,aAAa;AAAC;AAAA;AAExC,MAAMC,KAAK,GAAG;EACVC,MAAM,EAAE,kBAAkB;EAC1BC,OAAO,EAAE,aAAa;EACtBC,eAAe,EAAE,OAAO;EACxBC,MAAM,EAAE;AACZ,CAAC;AACD,MAAMC,SAAS,GAAG,QAA6C;EAAA;EAAA,IAA5C;IAAEC,IAAI;IAAEC,UAAU;IAAEC,IAAI;IAAEC;EAAY,CAAC;EAEtD,MAAMC,GAAG,GAAGb,MAAM,CAAC,IAAI,CAAC;EACxB,MAAM,CAAC;IAAEc;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGd,OAAO,CAClC,OAAO;IACHe,IAAI,EAAE;MAAGC,EAAE,EAAER,IAAI,CAACQ,EAAE;MAAEN,IAAI;MAAEO,IAAI,EAAEhB;IAAW,CAAC;IAC9CiB,OAAO,EAAE,CAACP,WAAW;IACrBQ,OAAO,EAAGC,OAAO,KAAM;MACnBP,UAAU,EAAEO,OAAO,CAACP,UAAU;IAClC,CAAC;EACL,CAAC,CAAC,EAAE,EAAE,CACT;EAED,MAAMQ,OAAO,GAAGR,UAAU,GAAG,CAAC,GAAG,CAAC;EAClCC,IAAI,CAACF,GAAG,CAAC;EAET,MAAMU,SAAS,GAAGb,UAAU,CAACD,IAAI,CAACQ,EAAE,CAAC;EAErC,MAAMO,WAAW,GAAG,YAAY;IAC5B,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC9CF,KAAK,CAACG,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IAChCJ,KAAK,CAACK,SAAS,GAAGP,SAAS,CAACQ,OAAO;EACvC,CAAC;EAED,oBACI;IAAA,uBACI;MACI,GAAG,EAAElB,GAAI;MACT,KAAK,EAAE;QAAE,GAAGV,KAAK;QAAEmB;MAAQ,CAAE;MAC7B,SAAS,EAAC,qBAAqB;MAC/B,OAAO,EAAEE,WAAY;MAAA,wBAErB;QAAA,UAAMf,IAAI,CAACQ;MAAE;QAAA;QAAA;QAAA;MAAA,QAAO,eACpB;QAAA,UAAMM,SAAS,CAACQ;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA;EAC5B,iBACP;AAEX,CAAC;AAAC,GArCIvB,SAAS;EAAA,QAGoBP,OAAO;AAAA;AAAA,KAHpCO,SAAS;AAsCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}